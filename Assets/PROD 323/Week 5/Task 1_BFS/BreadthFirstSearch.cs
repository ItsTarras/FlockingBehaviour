using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using UnityEngine;

public static class BreadthFirstSearch
{
    // This function will return a list of nodes generated by BFS
    // This is then used to visualize the path to the end cube
    public static List<Node> FindPath(TerrainGraph tGraph, Node startNode, Node endNode)
    {
        // A list of nodes that denotes the path
        List<Node> path = new List<Node>();

        Dictionary<Node, Node> visitedNodes = new Dictionary<Node, Node>();
        Queue<Node> nodesToVisit = new Queue<Node>();
        
        nodesToVisit.Enqueue(startNode);

        visitedNodes.Add(startNode, startNode);

        Node currentNode = new Node(0, 0);

        // Iterate through all the nodes
        while(nodesToVisit.Count > 0)
        {
            currentNode = nodesToVisit.Dequeue();
            if(currentNode == endNode)
            {
                break; // Already reached the end node, exit the loop
            }

            foreach (Node adjacentNode in tGraph.GetNeighbours(currentNode)) 
            {
                if (!visitedNodes.ContainsKey(adjacentNode))
                {
                    nodesToVisit.Enqueue(adjacentNode);
                    visitedNodes[adjacentNode] = currentNode;
                }
            }
        }

        // Construct the path, follow back the nodes
        while (currentNode != startNode)
        {
            path.Add(currentNode);
            currentNode = visitedNodes[currentNode];

            
        }
        path.Reverse();
        return path;
    }
    
}
